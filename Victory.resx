<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAP//Z
</value>
  </data>
</root>